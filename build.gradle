plugins {
    id 'java-library'
    id 'jacoco'
    id 'signing'
    id 'maven-publish'
    id 'io.freefair.lombok' version '4.1.6'
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

group = 'com.tryadhawk'
version = '2.0.2'

description = """com.tryadhawk airtable"""

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withSourcesJar()
    withJavadocJar()
}
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
generateLombokConfig.enabled = false

dependencies {
    api 'com.google.code.findbugs:jsr305:3.0.2'
    api 'org.asynchttpclient:async-http-client:2.10.4'
    api 'com.fasterxml.jackson.core:jackson-databind:2.10.2'
    api 'org.reactivestreams:reactive-streams:1.0.3'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    api 'org.slf4j:slf4j-api:1.7.30'

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.assertj:assertj-core:3.15.0'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

publishing {
    repositories {
        maven {
            name = 'ossrh'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = System.getenv('SONATYPE_USER')
                password = System.getenv('SONATYPE_PASSWORD')
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId rootProject.name
            from components.java

            pom {
                name = 'com.tryadhawk:airtable-java'
                description = 'Java client for the Airtable API'
                url = 'https://github.com/adHawk/airtable-java'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'cwilbur12'
                        name = 'Cory Wilbur'
                        email = 'cory.wilbur@tryadhawk.com'
                    }
                    developer {
                        id = 'twinklehawk'
                        name = 'Alex Daidone'
                        email = 'alex.daidone@tryadhawk.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:adHawk/airtable-java.git'
                    developerConnection = 'scm:git:git@github.com:adHawk/airtable-java.git'
                    url = 'https://github.com/adHawk/airtable-java'
                }
            }
        }
    }
}

ext.runSigning = project.hasProperty('runSigning') && runSigning.toBoolean()
tasks.withType(Sign) {
    onlyIf { runSigning }
}
signing {
    def signingKey = System.getenv('SIGNING_KEY')
    def signingPassword = System.getenv('SIGNING_PASSWORD')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}
