/*
 * The MIT License (MIT)
 * Copyright (c) 2017 Sybit GmbH
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 */

plugins {
    id 'java'
    id 'maven'
    id 'jacoco'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "http://dl.bintray.com/typesafe/maven-releases" }
}

group = 'com.tryadhawk'
version = '2.0.0'

description = """com.tryadhawk airtable"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

dependencies {
    compile group: 'com.mashape.unirest', name: 'unirest-java', version:'1.4.9'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.5.9'
    compile group: 'org.json', name: 'json', version:'20160810'
    compile group: 'com.google.code.gson', name: 'gson', version:'2.8.5'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version:'1.9.3'
    compile group: 'commons-io', name: 'commons-io', version:'2.6'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.26'

    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version:'2.23.2'
    testCompile group: 'org.slf4j', name: 'slf4j-jdk14', version:'1.7.26'
}

// custom tasks for creating source jar
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
// custom tasks for creating javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/adhawk/airtable-java")
            credentials {
                username = System.getenv("REPO_USERNAME")
                password = System.getenv("REPO_PASSWORD")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            //we have to change scope from runtime to compile. Especially for Gson-lib.
            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each { it.scope*.value = 'compile' }
            }

            artifactId rootProject.name

            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}
